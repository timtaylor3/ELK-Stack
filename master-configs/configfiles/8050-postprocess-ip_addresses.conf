# This is a re-write of the SOF-ELK conf by the same name
# Handles IPv6 and the new MaxMind GeoLite2-ASN.mmdb database
#
# This file contains transforms and enrichments to be applied in postprocessing

filter {

  if [ClientIP] {

      geoip {
        database => "/usr/local/share/GeoIP/GeoLite2-ASN.mmdb"
        source => "[ClientIP]"
        target => "[ClientIP_geo]"
      }
      geoip {
        database => "/usr/local/share/GeoIP/GeoLite2-City.mmdb"
         source => "[ClientIP]"
        target => "[ClientIP_geo]"
      }
      mutate {
        add_field => {
          "ips" => [ "%{ClientIP}" ]
        }
      }
  }


  if [source_ip] {

      geoip {
        database => "/usr/local/share/GeoIP/GeoLite2-ASN.mmdb"
        source => "[source_ip]"
        target => "[source_geo]"
      }
      geoip {
        database => "/usr/local/share/GeoIP/GeoLite2-City.mmdb"
        source => "[source_ip]"
        target => "[source_geo]"
      }
      mutate {
        add_field => {
          "ips" => [ "%{source_ip}" ]
        }
      }
  }

  if [source_geo][ip] {
    mutate {
      remove_field => [ "[source_geo][ip]" ]
    }
  }

  if [source_geo][number] and [source_geo][asn] {
    mutate {
      add_field => { "[source_geo][asnstr]" => "%{[source_geo][number]}: %{[source_geo][asn]}" }
    }
  }

  if [destination_ip] {
    if [destination_ip] == "-" {
      mutate {
        replace => { "destination_ip" => "0.0.0.0" }
      }
    }

      geoip {
        database => "/usr/local/share/GeoIP/GeoLite2-ASN.mmdb"
        source => "[destination_ip]"
        target => "[destination_geo]"
      }
      geoip {
        database => "/usr/local/share/GeoIP/GeoLite2-City.mmdb"
        source => "[destination_ip]"
        target => "[destination_geo]"
      }

      mutate {
        add_field => {
          "ips" => [ "%{destination_ip}" ]
        }
      }
  }

  if [destination_geo][ip] {
    mutate {
      remove_field => [ "[destination_geo][ip]" ]
    }
  }

  if [destination_geo][number] and [destination_geo][asn] {
    mutate {
      add_field => { "[destination_geo][asnstr]" => "%{[destination_geo][number]}: %{[destination_geo][asn]}" }
    }
  }

  if [answer_ip] {

      geoip {
        database => "/usr/local/share/GeoIP/GeoLite2-ASN.mmdb"
        source => "[answer_ip]"
        target => "[answer_geo]"
      }
      geoip {
        database => "/usr/local/share/GeoIP/GeoLite2-City.mmdb"
        source => "[answer_ip]"
        target => "[answer_geo]"
      }
      mutate {
        add_field => {
          "ips" => [ "%{answer_ip}" ]
        }
      }
  }
  if [answer_geo][ip] {
    mutate {
      remove_field => [ "[answer_geo][ip]" ]
    }
  }

  if [answer_geo][number] and [answer_geo][asn] {
    mutate {
      add_field => { "[answer_geo][asnstr]" => "%{[answer_geo][number]}: %{[answer_geo][asn]}" }
    }
  }

  if [source_geo][number] and [source_as] == 0 {
    mutate {
      replace => { "source_as" => "%{[source_geo][number]}" }
    }
    mutate {
      gsub => [ "source_as", "^AS", "" ]
    }
    mutate {
      convert => { "source_as" => "integer" }
    }
  }

  if [destination_geo][number] and [destination_as] == 0 {
    mutate {
      replace => { "destination_as" => "%{[destination_geo][number]}" }
    }
    mutate {
      gsub => [ "destination_as", "^AS", "" ]
    }
    mutate {
      convert => { "destination_as" => "integer" }
    }
  }
}
